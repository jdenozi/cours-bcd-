library(ape)
install http://ape-package.ird.fr/
install (http://ape-package.ird.fr/)
install ("http://ape-package.ird.fr/")
installpackages("http://ape-package.ird.fr/")
install.packages("http://ape-package.ird.fr/")
install.packages("https://cran.r-project.org/src/contrib/ape_5.2.tar.gz")
library(ape)
quit()
R CMD INSTALL ape_5.2.tar.gz
install.packages("ape_5.2.tar.gz")
quit()
install.packages("ape")
install.packages("phangorn")
install.packages("phytools")
install.packages("ape")
library(ape)
install CRAN Task View for phylogenetics install.packages('ctv')
install.packages('ctv')
library(ape)
install.views("ape")
library('ctv') install.views('Phylogenetics')
library('ctv') install('Phylogenetics')
library('ctv')
install.views('Phylogenetics')
lib(ape)
library(ape)
update.views('Phylogenetics')
library(ape)
install.packages("ape")
library(ape)
quit()
library(ape)
install.packages("ape")
quit()
install.packages("ape")
library(ape)
align<-read.dna("BRCA1_aligned.fasta", format="fasta", as character=TRUE)
align<-read.dna("BRCA1_aligned.fasta", format="fasta", as.character=TRUE)
quit()
seaview
quit()
align<-read.dna("BRCA1.out", format="fasta", as.character=TRUE)
align<-read.dna("BRCA1.out", format="fasta", as.character=TRUE)
library(ape)
align<-read.dna("BRCA1.out", format="fasta", as.character=TRUE)
quit()
library(ape)
align<-read.dna("BRCA1.out", format="fasta", as.character=TRUE)
align[1]
align[1,]
align[,1]
source(tp5.r)
source(tp5.R)
nombre_gap<-0
liste_gap<-[]
compteur<-0
for(i in align[1]){
        if(i=="_"){
            compteur<-compteur+1
            }
        else{
            print compteur
            nombre_gap<-nombre_gap+1
            liste_gap(liste_gap,"gap="+nombre_gap+"="+compteur)
            compteur=0
            }
        }
align[,1]
quit()
source("tp5.R")
source("tp5.R")
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
vim tp5.R
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source("tp5.R")
quit()
source(horlogue_moleculaire.R)
source(horloge_moleculaire)
quit()
source("horloge_moleculaire.R")
quit()
install.packages("rnaseqWrapper")
install.packages("sequinr")
install.packages("seqinr")
source("horloge_moleculaire.R")
qui()
quit()
source("horloge_moleculaire.R")
quit()
source("horloge_moleculaire")
source("horloge_moleculaire.R")
quit()
source("horloge_moleculaire.R")
quit()
library(seqinr)
NFYA<-read.alignement("NFYA.fasta",format="fasta")
NFYA<-read.alignment("NFYA.fasta",format="fasta")
kaks(NFYA)
 write.table(NFYA, "NFYA.txt", row.names = TRUE, col.names = TRUE)
 write.table(NFYA, "NFYA.txt")
NFYA
 write.table(kaks(NFYA), "NFYA.txt")
kaks(NFYA)
ka
mat<-kaks(NFYA)
mat
mat(ka)
mat($ka)
mat
mat$ska
mat
kaks(NFYA)$ka
kaks(NFYA)$ks[]
kaks(NFYA)$ks
kaks(NFYA)$ks[4]/(2*312)
kaks(NFYA)$ks[4]
kaks(NFYA)$ks[6]
kaks(NFYA)$ks[5]
kaks(NFYA)$ks[3]
kaks(NFYA)$ks[5]/(312*2)
u3<-kaks(NFYA)$ks[5]/(312*2)
u2<-kaks(NFYA)$ks[3]/(312*2)
u1<-kaks(NFYA)$ks[1]/(62.5*2)
u1<-kaks(NFYA)$ks[1]/(61.5*2)
ho<-kaks(NFYA)$ks[2]
hv<-kaks(NFYA)$ks[3]
t<-((ho-hv)/2)/2*u1
t
t<-((ho+hv)/2)/2*u1
t
t<-((ho+hv)/2)/(2*u1)
t
quit()
